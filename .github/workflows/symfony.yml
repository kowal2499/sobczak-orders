# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Symfony test

on:
  push:
    branches: [ "test" ]
  pull_request:
    branches: [ "test" ]

permissions:
  contents: read

jobs:
  symfony-test:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: mysql://user:pass@127.0.0.1:3306/symfony_test

    services:
      db:
        image: mysql:5.7
        ports: 
          - 3306:3306
        env:
          MYSQL_DATABASE: symfony_test
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: user
          MYSQL_PASSWORD: pass
        options: >-
          --health-cmd="mysqladmin ping -u root -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
          
    steps:
      #  To automatically get bug fixes and new Php versions for shivammathur/setup-php,
      # change this to (see https://github.com/shivammathur/setup-php#bookmark-versioning):
      # uses: shivammathur/setup-php@v2
      - uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
        with:
          php-version: '7.3'
          extensions: mbstring, intl, pdo, pdo_mysql
          tools: composer    
      - uses: actions/checkout@v4
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
            
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
          
      - name: Execute Database migrations
        run: php bin/console doctrine:migrations:migrate --no-interaction
      
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: vendor/bin/phpunit ./tests
        

      - name: Install JS Dependencies
        uses: actions/setup-node@v4
        with:
          node-version: '10.19'
      - name: Install NPM dependencies
        run: |
          cd assets
          npm install

      - name: Build JS and CSS
        run: npm run build
        env:
          NODE_ENV: production

      - name: Upload build files as artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-assets
          path: assets/build/*  # Ścieżka do folderu z zbudowanymi plikami
