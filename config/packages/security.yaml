security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User:
            algorithm: auto

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator

            logout:
                path: security_logout

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 2592000

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    role_hierarchy:
        ROLE_ADMIN: [ROLE_SETTINGS, ROLE_PRODUCTION, ROLE_CUSTOMERS, ROLE_PRODUCTS, ROLE_CONFIG, ROLE_CUSTOMERS_LIMITED]
        ROLE_USER: [ROLE_CUSTOMERS, ROLE_PRODUCTS, ROLE_PRODUCTION_VIEW]
        ROLE_CUSTOMER: [ROLE_CUSTOMERS_LIMITED, ROLE_PRODUCTION_VIEW]

        ROLE_PRODUCTION: [ROLE_PRODUCTION_VIEW, ROLE_PRODUCTS]

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/touch_user$, role: IS_AUTHENTICATED_ANONYMOUSLY }


#        - { path: ^/customers, roles: [ROLE_ADMIN, ROLE_USER] }
#        - { path: ^/customers/api, roles: [ROLE_ADMIN, ROLE_USER] }

        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }


        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
